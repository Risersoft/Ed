@using risersoft.app.mxform.talent
@using risersoft.shared.web.Extensions
@using Syncfusion.EJ2

@model frmContentUnitUploadModel
@{
    ViewData["Title"] = "";
    Layout = "~/Views/Shared/_FrameworkLayout.vbhtml";
    var modeljson = Model.SerializeJson();
}

<script src="http://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.4.456/pdf.js"></script>
<script type="text/javascript">
    var defaultRTE; var defaultRTEFN;
    function created() {
        defaultRTE = this;
        this.insertImageSettings = {
            saveFormat: "Base64"
        };
    };

    function createdfn() {
        defaultRTEFN = this;
        this.insertImageSettings = {
            saveFormat: "Base64"
        };
    };
</script>

<style>
    .progressdis {
        background-color: rgb(2, 127, 189);
        color: #fff;
        height: 25px;
    }

    .progress {
        height: 25px !important;
    }

    .progressdis {
        display: block !important;
    }

    .cresult {
        display: none;
    }

    .cresultdis {
        display: block !important;
    }

    .cprocess {
        display: none;
    }

    .cLink {
        display: none;
    }

    .cfailure {
        display: none;
        width: 750px
    }

    #dfilen {
        display: none;
    }

    #dfilec {
        display: none;
    }

    .percent {
        position: absolute;
    }

    #stage {
        background: #eee;
        width: 700px;
        height: 420px;
        overflow: hidden;
        position: relative;
        margin: 2em 0;
        border: 1px solid;
        margin-left: 80px;
    }

        #stage span {
            font-size: 20px;
            color: #666;
            display: block;
            padding: 2em;
        }

    video {
        width: 700px;
        height: 420px;
        position: absolute;
        top: 0;
        left: 0;
    }

    #controls {
        position: relative;
        width: 400px;
    }

    #change {
        position: absolute;
        right: -482px;
        top: -450px;
        width: 100px;
    }

    button {
        font-size: 150%;
        text-align: center;
        display: block;
    }

    #change button {
        width: 60px;
        border: none;
        background: #fff;
    }
</style>

<div Class="container cbackground">
    <form action="" method="post" name="userform" id="userform" ng-controller="FormController">
        <input type="hidden" id="model_json" value='@Html.Raw(modeljson)' />
        <input type="hidden" id="fileStatus" />

        @Html.AntiForgeryToken()

        <!-- Start Page Heading Section -->
        <div class="row">
            <div class="col-md-10">
                <label class="control-label"></label>
                <h5 style="color:#1c66a7">{{title}} Content Unit Upload</h5>
            </div>
            <div class="col-md-1"></div>
        </div>
        <hr />
        <!-- End Page Heading Section -->
        <!-- Start Page Content -->
        <div class="form-row">
            <div class="form-group col-md-12">
                <label for="inputEmail4">Title <span class="red">*</span></label>  <span style="float:right;margin-right: 45px;"><input type="checkbox" name="IsVisibleLearner" ng-model="ContentUnitInfo.IsVisibleLearners"> Visible for Learner</span>
                <input type="text" class="form-control" name="coursetitle" style="max-width:96%" ng-model="ContentUnitInfo.Title" required ng-class="{true: 'error'}[submitted() && userform.coursetitle.$invalid]" />
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputEmail4">Course Code</label>
                <input type="text" class="form-control" name="coursecode" ng-model="CourseInfo.CourseCode" ng-disabled="isDisabled" style="min-width: 90%;" />
            </div>
            <div class="form-group col-md-6">
                <label for="inputPassword4">Course Name</label>
                <input type="text" class="form-control" name="coursename" ng-model="CourseInfo.CourseName" ng-disabled="isDisabled" style="min-width: 92%;" />
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputPassword4">Document Type</label>
                <select class="form-control" ng-model="CourseInfo.docTypeSelected" name="docType" style="min-width: 90%;" ng-disabled="isDisabled">
                    <option value="document">Document</option>
                    <option value="video">Video</option>
                    <option value="audio">Audio</option>
                    <option value="pdf">PDF</option>
                    <option value="presentation">Presentation</option>
                </select>
            </div>
            <div class="form-group col-md-6">
                <label for="inputPassword4">Content File Name</label>
                <input type="text" class="form-control" id="cFileName" name="cFileName" ng-model="ContentUnitInfo.ContentFilePath" ng-disabled="isDisabled" style="min-width: 92%;" />
            </div>
        </div>
        <!-- End Page Content-->

        <div class="clearfix" style="margin-top:20px;"></div>
        <div class="row" style="padding: 0px 20px;">
            <ul class="nav nav-tabs" id="myTab" role="tablist" style="width:100%">
                <li class="nav-item">
                    <a class="nav-link active" id="source-tab" data-toggle="tab" href="#source" role="tab" aria-controls="source" aria-selected="true">Source</a>
                </li>
            </ul>

            <div class="tab-content" id="myTabContent" style="width:99%;">
                <div class="tab-pane fade show active" id="source" role="tabpanel" aria-labelledby="content-tab">
                    <div class="clearfix" style="margin-top:20px;"></div>
                    <div class="progress" id="progressc" style="text-align:center;border: 1px solid #027fbd;border-radius: 5px;margin-bottom: 10px; max-width:73%;display:none;">
                        <div class="progress-bar"></div>
                        <div class="percent" style="width:50%">0%</div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-9">
                            <label for="inputPassword4">Upload File <span style="font-weight:bold" ng-if="CourseInfo.docTypeSelected == 'video'">(File Size Limit: 500 MB)</span></label>
                            <input type="file" id="filename" name="fileToUpload" ng-model="fileToUpload" class="form-control" accept="{{acceptFile}}" autocomplete="off" style="max-width: 98%;">
                        </div>
                        <div class="form-group col-md-1">
                            <button type="button" id="btnUpload" class="btn btn-default btnf" ng-click="UploadDocType()" style="margin-top: 36px;">Upload</button>
                        </div>
                        <div class="form-group col-md-2">
                            <button type="button" id="btnFullPreview" class="btn btn-default btnf" ng-click="loadPdf(CourseInfo.docTypeSelected, flName)" style="margin-top: 36px; display:none">Load Full Preview</button>
                        </div>
                        @*<div class="col-md-12" style="font-weight: bold; max-width: 975px; font-size:13px;" ng-if="CourseInfo.docTypeSelected == 'video'">File Size Limit: 500 MB</div>*@
                        <div class="col-md-12" style="max-width: 975px; font-size:13px;display:none;" id="taskMsg"></div>

                        <!-- Document Viewer -->
                        <div id="stage" style="display:none;"></div>
                        <div id="controls" style="display:none;"></div>

                        <div id="showPreview" style="display:none;"></div>
                        <img src="" alt="Image Preview" id="imgSrc" style="display:none; padding: 0px 20px; margin-left: 45px; border: 1px solid; width: 960px;" />
                    </div>
                </div>
            </div>
        </div>

        <div class="clearBoth" style="margin-top:10px;"></div>
        <a class="btn btn-default" data-toggle="collapse" href="#collapseNotes" role="button" aria-expanded="false" aria-controls="collapseExample" style="margin-left: 10px;margin-bottom: 10px;">
            Notes
        </a>
        <a class="btn btn-default" data-toggle="collapse" href="#collapseUpload" role="button" aria-expanded="false" aria-controls="collapseExample" style="margin-left: 10px;margin-bottom: 10px;">
            References
        </a>

        <div class="collapse" id="collapseNotes">
            <div class="form-group col-md-12">
                <div class="control-section">
                    @Html.EJS().RichTextEditor("defaultRTE").Value("").Created("created").Render()
                </div>
                @Html.EJS().ScriptManager()
            </div>
        </div>

        <div class="collapse" id="collapseUpload">
            <div style="margin-top:10px;"></div>
            @Html.Partial("_Attachment")
        </div>
        <hr />

        @Html.Partial("_SavePanel")
        <div id="dialogUsers"></div>

        <!-- Modal -->
        <div class="modal fade" id="errorModel" role="dialog" style="z-index:99999">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                        <h4 class="modal-title">Error</h4>
                    </div>
                    <div class="modal-body">
                        <p style="font-size: 16px;" id="eMsg">Please check your uploaded file extension. </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnClose" class="btn btn-default" ng-click="closeErrorDialog()">Close</button>
                    </div>
                </div>

            </div>
        </div>
    </form>
</div>

@section botscripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnsave').prop('disabled', true);
        });

        rsApp.controller('FormController', function ($scope, $http, $interval, usSpinnerService) {
            $scope.model = JSON.parse($("#model_json").val());
            $scope.status = 'loaded';

            var loadmodel = function (result) {
                $scope.model = result;
                //Set Content Unit Details
                $scope.ContentUnitInfo = $scope.model.dsForm.DT[0];
                //set values in scope
                $scope.CourseInfo = $scope.model.DatasetCollection.Course.Course[0];
                //Set Page Heading
                $scope.title = ($scope.model.frmMode == 2 ? "Add" : $scope.model.frmMode == 1 ? "Edit" : "");
                //Show Hide Delete Buttons
                $scope.visdel = ($scope.model.frmMode == 2 ? false : true);
                //disabled in edit mode
                $scope.isDisabled = "disabled";
                //Set Dropdown Seleted Value
                $scope.CourseInfo.docTypeSelected = $scope.model.vBag.doctype;
                //$scope.hideLoadbutton = false;

                //show hide back button
                if ($scope.CourseInfo.CourseID !== undefined) {
                    $scope.showbacktoprev = true;
                    $('#btnback').hide();
                }
                else {
                    $scope.showbacktoprev = false;
                    $('#btnback').show();
                }

                if ($scope.model.vBag.doctype == "document")
                    $scope.acceptFile = ".doc, .docx";
                if ($scope.model.vBag.doctype == "video")
                    $scope.acceptFile = ".mp4,.mkv,.wav,.3gp, .wmv, .wma, .flv";
                if ($scope.model.vBag.doctype == "audio")
                    $scope.acceptFile = ".mp3,.m4a,.flac,.wav,.wma,.aac,.webm";
                if ($scope.model.vBag.doctype == "presentation")
                    $scope.acceptFile = ".ppt, .pptx";
                if ($scope.model.vBag.doctype == "pdf")
                    $scope.acceptFile = ".pdf";

                if ($scope.model.frmMode == 1) {
                    if ($scope.ContentUnitInfo.ContentPDFPath != undefined || $scope.ContentUnitInfo.ContentFilePath != undefined || $scope.ContentUnitInfo.ContentImagePath != undefined) {
                        if ($scope.ContentUnitInfo.DocType.toLowerCase() == "document" || $scope.ContentUnitInfo.DocType.toLowerCase() == "pdf" || $scope.ContentUnitInfo.DocType.toLowerCase() == "presentation")
                            $scope.flName = $scope.ContentUnitInfo.ContentPDFPath;

                        if ($scope.ContentUnitInfo.DocType.toLowerCase() == "video" || $scope.ContentUnitInfo.DocType.toLowerCase() == "audio")
                            $scope.flName = $scope.ContentUnitInfo.ContentFilePath;

                        var url = '/frmContentUnitUpload/ParamsOutput' + location.search;
                        var payload = { serverPath: $scope.ContentUnitInfo.ContentImagePath }; //, length: $scope.ContentUnitInfo.ContentImagePath !== undefined ? $scope.ContentUnitInfo.ContentImagePath.length : 0
                        payload = JSON.stringify(payload);
                        var payloaddata = { key: 'download', Params: payload, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                        $.post(url, payloaddata, function (result) {
                            if (result.success) {
                                if (result.Data != null && result.Data != undefined) {
                                    if ($scope.model.vBag.doctype !== "video" && $scope.model.vBag.doctype !== "audio") {
                                        $('#imgSrc').attr("src", result.Data);
                                        $('#imgSrc').show();
                                    }

                                    $('#btnFullPreview').show();
                                    $('#btnFullPreview').removeAttr("disabled");
                                    $('#btnsave').removeAttr("disabled");
                                    $('#showPreview').html('');
                                    $('#showPreview').hide();
                                }
                                else if ($scope.model.vBag.doctype == "video" || $scope.model.vBag.doctype == "audio") {
                                    $('#btnFullPreview').show();
                                    $('#btnFullPreview').removeAttr("disabled");
                                    $('#btnsave').removeAttr("disabled");
                                    $('#showPreview').html('');
                                    $('#showPreview').hide();
                                }
                                else {
                                    $('#showPreview').html("Preview not available.");
                                    $('#showPreview').show();
                                }
                            }
                        });
                    }

                    //NOtes
                    defaultRTE.value = $scope.ContentUnitInfo.NotesHTML == undefined ? "" : $scope.ContentUnitInfo.NotesHTML;
                }

                //List of Files
                $scope.UploadFiles = $scope.ContentUnitInfo.AttachmentJson !== undefined ? JSON.parse($scope.ContentUnitInfo.AttachmentJson) : [];
            }

            loadmodel($scope.model);

            $scope.backtoprev = function () {
                var base = '/App/Link' + location.search;
                var courseContent = {};
                angular.copy($scope.CourseInfo, courseContent);
                courseContent.DescriptionHTML = '';
                courseContent.DescriptionText = '';
                var payload = { fKey: 'frmCourseContent', fMode: 'acEditM', IDX: $scope.CourseInfo.CourseID, rowData: JSON.stringify(courseContent) }; // for edit

                $.post(base, payload, function (result) {
                    $scope.status = 'loaded';
                    window.location = result;
                });
            }

            $scope.UploadDocType = function () {
                var fileExtn = $('#filename').val().split('.').pop().toLowerCase();

                if ($scope.CourseInfo.docTypeSelected == "document") {
                    if (fileExtn !== "doc" && fileExtn !== "docx") {
                        $('#errorModel').modal('toggle');
                        return false;
                    }
                }
                if ($scope.CourseInfo.docTypeSelected == "video") {
                    if (fileExtn !== "mp4" && fileExtn !== "m4v" && fileExtn !== "mpeg" && fileExtn !== "mpg" && fileExtn !== "wmv" && fileExtn !== "mkv" && fileExtn !== "wav" && fileExtn !== "3gp" && fileExtn !== "wmv" && fileExtn !== "wma" && fileExtn !== "flv") {
                        $('#errorModel').modal('toggle');
                        return false;
                    }

                    var fileSize = $('#filename');
                    const file = Math.round((fileSize.get(0).files[0].size / 1024));

                    if (file >= 512000) {
                        $('#errorModel').modal('toggle');
                        $('#eMsg').html('File should be not more than 500 MB');
                        return false;
                    }
                }
                if ($scope.CourseInfo.docTypeSelected == "audio") {
                    if (fileExtn !== "mp3" && fileExtn !== "m4a") {
                        $('#errorModel').modal('toggle');
                        return false;
                    }
                }
                if ($scope.CourseInfo.docTypeSelected == "presentation") {
                    if (fileExtn !== "ppt" && fileExtn !== "pptx") {
                        $('#errorModel').modal('toggle');
                        return false;
                    }
                }
                if ($scope.CourseInfo.docTypeSelected == "pdf") {
                    if (fileExtn !== "pdf") {
                        $('#errorModel').modal('toggle');
                        return false;
                    }
                }

                $('#progressc').show();
                var percentVal = '0%';
                bar.width(percentVal);
                percent.html(percentVal);
                $('.cprocess').removeClass('progressdis');
                $('.cfailure').removeClass('progressdis');
                $('.cprocess').html('');
                $('.cfailure').html('');

                //$scope.disableUploadButton = true;
                $('#btnUpload').prop('disabled', true);
                $scope.id = $scope.model.DatasetCollection.Course.Course[0].CourseID;
                var filec = '';

                // For Progress baar
                filc = $('#filename');
                filec = $('#filename').val();
                var url = '/frmContentUnitUpload/ParamsOutput' + location.search;
                var payload = { filename: filec, courseid: $scope.id };
                payload = JSON.stringify(payload);
                var payloaddata = { key: 'sas', Params: payload, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                // generic fxn
                $scope.UploadFile(url, payloaddata, false);
            }

            $scope.loadPdf = function (fileType, fName) {
                $("div.spinnerTarget").addClass("backdrop");
                $("body").css("overflow", "hidden");
                usSpinnerService.spin('spinner-1');

                $('#btnFullPreview').prop("disabled", true)
                var url = '/frmContentUnitUpload/ParamsOutput' + location.search;
                var payload = { serverPath: fName };
                payload = JSON.stringify(payload);
                var payloaddata = { key: 'download', Params: payload, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                $.post(url, payloaddata, function (result) {
                    if (result.success) {
                        $('#showPreview').html('');
                        if (fileType == "document" || fileType == "presentation" || fileType == "pdf") {
                            $('#showPreview').append('<iframe frameborder="0" style="width:1050px;height:400px;padding:0px 20px;" src="/Content/web/viewer.html?file=' + encodeURIComponent(result.Data) + '"></iframe>');
                            $('#imgSrc').hide();
                            $('#showPreview').show();
                        }
                        if (fileType == "video") {
                            $scope.videoUrl =  result.Data;
                            var videoHtml = '<video controls><source src="' + result.Data + '" type="video/mp4"></video>';
                            $('#stage').html(videoHtml);
                            let myCoolCode = document.createElement("script");
                            myCoolCode.setAttribute("src", "/Scripts/transformvideo.js");
                            document.body.appendChild(myCoolCode);

                            $('#imgSrc').hide();
                            $('#stage').show();
                            $('#controls').show();
                        }
                        if (fileType == "audio") {
                            var audioView = "<audio controls>";
                            audioView += "<source src='" + result.Data + "' type='audio/mpeg'>";
                            audioView += "Your browser does not support the audio element.";
                            audioView += "</audio>";

                            $('#showPreview').html(audioView);
                            $('#imgSrc').hide();
                            $('#showPreview').show();
                        }

                        $('#btnFullPreview').show();
                        $('#btnFullPreview').removeAttr("disabled");

                        $("div.spinnerTarget").removeClass("backdrop");
                        $("body").css("overflow", "auto");
                        usSpinnerService.stop('spinner-1');
                    }
                });
            };

            //CleanUp Model
            $scope.cleanupmodel = function (datamodel) {
                datamodel.DatasetCollection.Course.Course[0].DescriptionHTML = '';
                datamodel.DatasetCollection.Course.Course[0].DescriptionText = '';
            };

            //Calculate Model
            $scope.calculatemodel = function () {
                $scope.model.dsForm.DT[0].Title = $scope.ContentUnitInfo.Title;
                //NOTES
                $scope.model.dsForm.DT[0].NotesHTML = base64EncodeUnicode(defaultRTE.getHtml());
                $scope.model.dsForm.DT[0].NotesText = base64EncodeUnicode(defaultRTE.getText());
                //Save Attachment
                $scope.ContentUnitInfo.AttachmentJson = JSON.stringify($scope.UploadFiles);
            };

            //Delete Records
            $scope.GenerateDelPayload = function () {
                //Pass the EntityKey in lowercase
                var payload = { EntityKey: 'ContentUnitUpload', ID: $scope.model.dsForm.DT[0].ContentUnitID, AcceptWarning: false };
                return payload;
            };

            $scope.downloadFile = function (filename) {
                $scope.download('frmContentUnitUpload', filename);
            }

            //Attachment
            @Html.RenderFile("~/Scripts/attchment.js");
            //Render Common Functions
            @Html.RenderFile("~/scripts/rsforms.js");
        });
    </script>
}

